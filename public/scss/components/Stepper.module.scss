@import '../utils/variables';

$borderWidth: 3px;
$animationTime: 1.5s;
$border-color-default: $color_line_brown;
$border-color-fill: $color_rose;
$size: 35px;
$howManySteps: 10;

.stepper
{
  @include flex(row, center, space-between);
  padding: 16px 18px;
  max-height: 57px;
  background: $color_rose_bg2;

  &_title
  {
    @include typographyBuilder(secondary, 400, 14, 24);
    color: $color_text_primary;
    margin-bottom: 0;
  }
}

.progress_circle
{
  width: $size;
  height: $size;
  line-height: $size;
  background: none;
  box-shadow: none;
  position: relative;

  &:after
  {
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: $borderWidth solid $border-color-default;
    position: absolute;
    top: 0;
    left: 0;
  }

  & > span
  {
    width: 50%;
    height: 100%;
    overflow: hidden;
    position: absolute;
    top: 0;
    z-index: 1;
  }

  &Left
  {
    left: 0;
  }

  &Bar
  {
    width: 100%;
    height: 100%;
    background: none;
    border-width: $borderWidth;
    border-style: solid;
    position: absolute;
    top: 0;
    border-color: $border-color-fill;
  }

  &Left &Bar
  {
    left: 100%;
    border-top-right-radius: calc($size / 2);
    border-bottom-right-radius: calc($size / 2);
    border-left: 0;
    -webkit-transform-origin: center left;
    transform-origin: center left;
  }

  &Right
  {
    right: 0;

    .progress_circleBar
    {
      left: -100%;
      border-top-left-radius: calc($size / 2);
      border-bottom-left-radius: calc($size / 2);
      border-right: 0;
      -webkit-transform-origin: center right;
      transform-origin: center right;
    }
  }

  &Value
  {
    display: flex;
    border-radius: 50%;
    text-align: center;
    line-height: 20px;
    align-items: center;
    justify-content: center;
    height: 100%;
    font-weight: 300;

    span
    {
      @include typographyBuilder(secondary, 400, 12, 32);
      color: $color_text_primary;
      text-align: center;
    }
  }
}

@for $i from 1 through $howManySteps
{
	$stepName: calc($i*(100 / $howManySteps));

	//animation only the left side if below 50%
	@if $i <= calc($howManySteps / 2)
  { 
		.progress_circle[data-percentage="#{$stepName}"]
    {
			.progress_circleRight .progress_circleBar
      {
				animation: loading-#{$i} $animationTime linear forwards;
			}
			.progress-circle-left .progress-circle-bar
      {
        animation: 0;
      }
		}
	}
	//animation only the right side if above 50%
	@if $i > calc($howManySteps / 2)  {  
		.progress_circle[data-percentage="#{$stepName}"]
    {
			.progress_circleRight .progress_circleBar
      {
				animation: loading-#{calc($howManySteps / 2)} $animationTime linear forwards;
			}
			.progress_circleLeft .progress_circleBar
      {
        animation: loading-#{$i - calc($howManySteps / 2)} $animationTime linear forwards $animationTime;
      }
		}
	}
}

//animation
@for $i from 1 through calc($howManySteps / 2)
{ 
	$degrees: calc(180 / calc($howManySteps / 2));
	$degrees: ($degrees*$i);

	@keyframes loading-#{$i}
  {
    0%
    {
      -webkit-transform: rotate(0deg);
      transform: rotate(0deg);
    }

    100%
    {
      -webkit-transform: rotate($degrees);
			transform: rotate(#{$degrees}deg);
    }
	}
}